1:"$Sreact.fragment"
2:I[2784,["874","static/chunks/874-9a172bef94aec849.js","63","static/chunks/63-1dff2157d01a3c16.js","177","static/chunks/app/layout-1d891d5b0c81a46c.js"],"default"]
3:I[7555,[],""]
4:I[1295,[],""]
5:I[3063,["874","static/chunks/874-9a172bef94aec849.js","63","static/chunks/63-1dff2157d01a3c16.js","974","static/chunks/app/page-f26b33fbd2941cff.js"],"Image"]
7:I[9665,[],"MetadataBoundary"]
9:I[9665,[],"OutletBoundary"]
c:I[4911,[],"AsyncMetadataOutlet"]
e:I[9665,[],"ViewportBoundary"]
10:I[6614,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/6975cac0a7ae24f4-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/641a7206b694a0e9.css","style"]
:HL["/_next/static/css/598b09e17ec3b27b.css","style"]
0:{"P":null,"b":"8ZLUY0SqD1m6Xrr0p_g4G","p":"","c":["","articles","aws-serverless-image-recognition-telegram-bot-using-terraform",""],"i":false,"f":[[["",{"children":["articles",{"children":[["slug","aws-serverless-image-recognition-telegram-bot-using-terraform","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/641a7206b694a0e9.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"__variable_5cfdac __variable_7620cf","children":["$","body",null,{"children":[["$","$L2",null,{}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"Footer_footer__4vzqH","children":["$","div",null,{"className":"Footer_footerContainer__77_mg","children":[["$","h2",null,{"children":"Run in the cloud. Reach the world."}],["$","div",null,{"className":"Footer_footerLinks__xuRtG","children":[["$","a",null,{"href":"https://github.com/andygolubev","target":"_blank","children":["$","$L5",null,{"src":"/images/icons/github.svg","alt":"GitHub","width":24,"height":24}]}],["$","a",null,{"href":"https://www.linkedin.com/in/andy-golubev/","target":"_blank","children":["$","$L5",null,{"src":"/images/icons/linkedin.svg","alt":"LinkedIn","width":24,"height":24}]}],["$","a",null,{"href":"mailto:andygolubevcontact@gmail.com","target":"_blank","children":["$","$L5",null,{"src":"/images/icons/email.svg","alt":"Send email","width":24,"height":24}]}]]}]]}]}]]}]}]]}],{"children":["articles",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","aws-serverless-image-recognition-telegram-bot-using-terraform","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L6",["$","$L7",null,{"children":"$L8"}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/598b09e17ec3b27b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L9",null,{"children":["$La","$Lb",["$","$Lc",null,{"promise":"$@d"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","1VT752rzH4YNF4KTVCCHH",{"children":[["$","$Le",null,{"children":"$Lf"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$10","$undefined"],"s":false,"S":true}
11:"$Sreact.suspense"
12:I[4911,[],"AsyncMetadata"]
8:["$","$11",null,{"fallback":null,"children":["$","$L12",null,{"promise":"$@13"}]}]
b:null
14:T5e9,user@ubuntu:~/aws-telegram-bot-serverless/terraform$ terraform state list
data.archive_file.lambda-bot-zip-file
data.archive_file.layer-zip-file
data.archive_file.webhook-function-zip-file
data.aws_caller_identity.current-account
data.aws_lambda_invocation.webhook-lambda-invocation
aws_apigatewayv2_api.call-back-api
aws_apigatewayv2_integration.api-gw-to-lambda
aws_apigatewayv2_route.post-callback-route
aws_apigatewayv2_stage.prod
aws_cloudwatch_log_group.call-back-api-gw
aws_cloudwatch_log_group.lambda-log-bot
aws_cloudwatch_log_group.lambda-log-webhook
aws_dynamodb_table.aws-telegram-bot-statistics
aws_iam_policy.custom-policy
aws_iam_role.lambdaRole
aws_iam_role_policy_attachment.custom-policy-attachment
aws_iam_role_policy_attachment.policy-attachment["arn:aws:iam::aws:policy/AWSLambdaExecute"]
aws_iam_role_policy_attachment.policy-attachment["arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"]
aws_iam_role_policy_attachment.policy-attachment["arn:aws:iam::aws:policy/AmazonRekognitionReadOnlyAccess"]
aws_iam_role_policy_attachment.policy-attachment["arn:aws:iam::aws:policy/service-role/AmazonS3ObjectLambdaExecutionRolePolicy"]
aws_lambda_function.bot-lambda
aws_lambda_function.webhook-lambda
aws_lambda_layer_version.lambda-layer-for-packages
aws_lambda_permission.api_gw
aws_s3_bucket.images-bucket
aws_s3_bucket_lifecycle_configuration.images-bucket-name-lifecycle_configuration
aws_secretsmanager_secret.bot-token-secret
aws_secretsmanager_secret_version.sversion
null_resource.pip-install
6:["$","div",null,{"className":"page_articleContainer__6YqF2","children":[["$","h1",null,{"style":{"fontSize":"2rem"},"children":"AWS Serverless image recognition Telegram bot using Terraform"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Date: 27 June 2023"}]}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/logo.jpg","alt":"logo"}]}],"\n",["$","h2",null,{"children":"Introduction"}],"\n",["$","p",null,{"children":"The world of technology is constantly evolving, and with it comes the need for efficient and scalable solutions. Serverless architecture has gained significant popularity due to its ability to handle workloads without the need for infrastructure management. In this article, we will explore the process of building an AWS Serverless image recognition Telegram bot using Terraform."}],"\n",["$","p",null,{"children":"With a pay-as-you-go pricing model, you only incur costs when functions are executed, ensuring cost effectiveness. Additionally, the availability of the AWS Free Tier means that for small workloads, you pay nothing."}],"\n",["$","p",null,{"children":"This bot utilizes webhooks from Telegram, enabling it to operate in a reactive manner, responding promptly to specific events. By leveraging webhooks, the bot remains idle until triggered."}],"\n",["$","h2",null,{"children":"Solution diagram"}],"\n",["$","p",null,{"children":"The diagram below illustrates the complete solution, employing a range of AWS services to ensure its seamless functionality."}],"\n",["$","p",null,{"children":"At the heart of the architecture lies the Lambda function, playing a pivotal role in executing the desired operations. To optimize the efficiency of Lambda deployments and accelerate initialization, Lambda layers are employed. These layers contain all the necessary dependencies, streamlining the deployment process and facilitating faster development iterations."}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic01.png","alt":"architecture diagram"}]}],"\n",["$","p",null,{"children":"To ensure the security of sensitive information, such as the BOT Token, I utilize Secrets Manager. This secure vault enables all lambdas to access the token directly, eliminating the need to store it in environment variables."}],"\n",["$","p",null,{"children":"The storage of user-sent images is facilitated by an S3 bucket. This allows AWS Rekognition access and retrieval of images by simply defining the path to the image within the bucket."}],"\n",["$","p",null,{"children":"API Gateway acts as a proxy for lambda function calls, providing a seamless communication channel. Beyond its immediate role, API Gateway offers potential future benefits, such as traffic routing and the ability to create development environments for APIs. This versatility positions the product for future scalability and easy integration with evolving requirements."}],"\n",["$","p",null,{"children":"For simple statistics storage, DynamoDB serves as an effective solution. By leveraging DynamoDB, the solution efficiently stores and retrieves statistical data, ensuring reliable data management without unnecessary complexity."}],"\n",["$","p",null,{"children":"Lastly, AWS Rekognition is utilized to detect labels on the pictures. While the implementation utilizes the smallest capability of the service due to development time constraints, it serves as a demonstration of its functionality. AWS Rekognition offers powerful image analysis capabilities, which can be further explored and enhanced in future iterations."}],"\n",["$","h2",null,{"children":"Bot functionality"}],"\n",["$","p",null,{"children":"The bot's functionality revolves around three simple entities:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Text processing"}],"\n",["$","li",null,{"children":"Image recognition"}],"\n",["$","li",null,{"children":"Statistics request"}],"\n"]}],"\n",["$","p",null,{"children":"Initially, to streamline the implementation, I consolidated these functionalities within a single Lambda function. However, as the logic grows more complex, I am inclined to adopt a modular approach by separating these functionalities into individual Lambda functions."}],"\n",["$","h2",null,{"children":"Bot Setup"}],"\n",["$","p",null,{"children":"Setting up a new bot is a straightforward process that requires just three simple steps, all of which can be accomplished with the help of the BotFather. Let's dive into the process:"}],"\n",["$","p",null,{"children":["Step 1: Request a New Bot",["$","br",null,{}],"\n","Step 2: Choose a Bot Name",["$","br",null,{}],"\n","Step 3: Assign an Account Name"]}],"\n",["$","p",null,{"children":"Optional Step: Set Bot Avatar Image"}],"\n",["$","p",null,{"children":"You can see it in the screenshots:"}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic02.png","alt":"bot setup screenshot 1"}]}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic03.png","alt":"bot setup screenshot 2"}]}],"\n",["$","h2",null,{"children":"Terraform project"}],"\n",["$","p",null,{"children":"To ensure a smooth and efficient setup process, I employ Terraform, an industry-leading Infrastructure as Code (IaC) tool. With Terraform, I can easily provision the entire infrastructure stack required for the project."}],"\n",["$","p",null,{"children":"Here is the entire repository:"}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"user@ubuntu:~/aws-telegram-bot-serverless$ tree\n.\n├── LICENSE\n├── lambda\n│   ├── bot-dependencies-layer\n│   │   └── requirements.txt\n│   ├── bot-function\n│   │   └── bot.py\n│   └── webhook-function\n│       └── webhook.py\n└── terraform\n    ├── 00-provider.tf\n    ├── 01-roles.tf\n    ├── 02-secrets.tf\n    ├── 03-lambda-layer-with-dependencies.tf\n    ├── 04-lambda-bot.tf\n    ├── 05-lambda-webhook.tf\n    ├── 06-api-gateway.tf\n    ├── 07-bucket-images.tf\n    ├── 08-dynamodb-stats.tf\n    ├── 98-output.tf\n    ├── 99-data.tf\n    ├── create_bucket.sh\n    ├── terraform.tfvars\n    └── variables.tf\n\n5 directories, 18 files\n"}]}],"\n",["$","p",null,{"children":"Let's take a closer look at the comprehensive list of resources provisioned:"}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"$14"}]}],"\n",["$","p",null,{"children":"While provisioning my infrastructure using Terraform, I encountered a challenge related to environment dependencies. To ensure the successful execution of my Terraform code, I rely on a local provisioner that involves executing a Python PIP Install command and storing the results in the /tmp folder. In order to address this issue and ensure a consistent setup across environments, I have implemented the following solution on GitHub."}],"\n",["$","h2",null,{"children":"GitHub Actions"}],"\n",["$","p",null,{"children":"To ensure convenience and flexibility, I have designed the bot to be deployable using two different methods: GitHub Action and local setup. This allows you to choose the approach that best suits your preferences and requirements."}],"\n",["$","p",null,{"children":"To facilitate this deployment flexibility, I have made certain modifications to the Terraform backend section. Since I do not use Terragrunt in this project, I have incorporated a sed command in my pipeline. This allows me to dynamically rewrite the Terraform backend section, specifying the appropriate AWS region. Although it may not be the most elegant solution, it effectively ensures the correct configuration for the backend."}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"...\njobs:\n  terraform:\n    name: 'Deploy the bot on AWS'\n    runs-on: ubuntu-latest\n\n...\n\n    - name: Replace the Region in the Provider section of Terraform  \n      run: sed -i 's/us-east-1/${{ env.AWS_REGION }}/g' $TERRAFORM_PATH/00-provider.tf\n\n    - name: Terraform Init\n      run: terraform -chdir=$TERRAFORM_PATH init\n...\n"}]}],"\n",["$","p",null,{"children":"I store a few secrets and one variable securely on GitHub. You should do the same if you want to use my code."}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic04.png","alt":"GitHub secrets"}]}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic05.png","alt":"GitHub variables"}]}],"\n",["$","p",null,{"children":"And I provide three workflows that simplify the deployment and management process of the bot:"}],"\n",["$","h3",null,{"children":"1 - Create Terraform State Bucket and DynamoDB Table:"}],"\n",["$","p",null,{"children":"This workflow enables the creation of a Terraform state bucket and a DynamoDB table. It's important to note that these objects will not be managed by Terraform itself and will require manual removal when necessary."}],"\n",["$","h3",null,{"children":"2 - Provisioning of Essential Bot Services:"}],"\n",["$","p",null,{"children":"The second workflow automates the provisioning of all the services required by the bot."}],"\n",["$","h3",null,{"children":"3 - Destruction of Managed Infrastructure:"}],"\n",["$","p",null,{"children":"The final workflow focuses on the controlled destruction of the infrastructure managed by Terraform. This process ensures the efficient cleanup of resources when they are no longer needed."}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic06.png","alt":"GitHub workflows"}]}],"\n",["$","p",null,{"children":"While utilizing Step 1, it is crucial to exercise caution. As S3 buckets have a global namespace, conflicts may arise when selecting bucket names. To mitigate this, it may be necessary to modify bucket names prefix. This ensures uniqueness and prevents naming conflicts within the global S3 namespace."}],"\n",["$","h2",null,{"children":"Demo Time"}],"\n",["$","p",null,{"children":"To provide a clearer understanding of the bot's operation, I present a few screens showcasing its functionality in action."}],"\n",["$","h3",null,{"children":"Image Recognition:"}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic07.png","alt":"demo image 1"}]}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic08.png","alt":"demo image 2"}]}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic09.png","alt":"demo image 3"}]}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic10.png","alt":"demo image 4"}]}],"\n",["$","h3",null,{"children":"Statistics Request:"}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/aws-serverless-image-recognition-telegram-bot-using-terraform/pic11.png","alt":"statistics screenshot"}]}],"\n",["$","p",null,{"children":"If you have a Telegram account, I invite you to try out the bot and explore its capabilities firsthand. I provide this bot until the end of July 2023. Further service is not guaranteed because I don't want to go beyond AWS Free Tier."}],"\n",["$","h2",null,{"children":"Conclusion"}],"\n",["$","p",null,{"children":"The AWS serverless stack offers you a powerful and scalable solution out of the box. This project demonstrates the potential of serverless architectures and highlights the ease of development using Terraform."}],"\n",["$","p",null,{"children":"I hope you enjoy this article."}],"\n",["$","p",null,{"children":["You can find all of my code in my GitHub repository: ",["$","a",null,{"href":"https://github.com/andygolubev/aws-telegram-bot-serverless","children":"https://github.com/andygolubev/aws-telegram-bot-serverless"}]]}],"\n",["$","p",null,{"children":["You can try this bot yourself: ",["$","a",null,{"href":"http://t.me/AWS_Image_Rekognition_Bot","children":"http://t.me/AWS_Image_Rekognition_Bot"}]]}],"\n",["$","p",null,{"children":["Feel free to connect with me on LinkedIn: ",["$","a",null,{"href":"https://www.linkedin.com/in/andy-golubev/","children":"https://www.linkedin.com/in/andy-golubev/"}]]}]]}]
f:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
a:null
13:{"metadata":[["$","title","0",{"children":"Andy Golubev | Cloud Architect & DevOps Engineer"}],["$","meta","1",{"name":"description","content":"Personal website of AWS & GCP certified Cloud Architect & DevOps Engineer Andy Golubev. Certifications, GitHub work, and articles on Kubernetes and Terraform."}],["$","link","2",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}],["$","link","3",{"rel":"icon","href":"/icon.png?a0799f5d3aa48e9f","type":"image/png","sizes":"512x512"}],["$","link","4",{"rel":"apple-touch-icon","href":"/apple-icon.png?21c489252a03a1cc","type":"image/png","sizes":"180x180"}]],"error":null,"digest":"$undefined"}
d:{"metadata":"$13:metadata","error":null,"digest":"$undefined"}
