1:"$Sreact.fragment"
2:I[2784,["874","static/chunks/874-9a172bef94aec849.js","63","static/chunks/63-1dff2157d01a3c16.js","177","static/chunks/app/layout-1d891d5b0c81a46c.js"],"default"]
3:I[7555,[],""]
4:I[1295,[],""]
5:I[3063,["874","static/chunks/874-9a172bef94aec849.js","63","static/chunks/63-1dff2157d01a3c16.js","974","static/chunks/app/page-f26b33fbd2941cff.js"],"Image"]
7:I[9665,[],"MetadataBoundary"]
9:I[9665,[],"OutletBoundary"]
c:I[4911,[],"AsyncMetadataOutlet"]
e:I[9665,[],"ViewportBoundary"]
10:I[6614,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/6975cac0a7ae24f4-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/641a7206b694a0e9.css","style"]
:HL["/_next/static/css/598b09e17ec3b27b.css","style"]
0:{"P":null,"b":"8ZLUY0SqD1m6Xrr0p_g4G","p":"","c":["","articles","backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds",""],"i":false,"f":[[["",{"children":["articles",{"children":[["slug","backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/641a7206b694a0e9.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"__variable_5cfdac __variable_7620cf","children":["$","body",null,{"children":[["$","$L2",null,{}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"Footer_footer__4vzqH","children":["$","div",null,{"className":"Footer_footerContainer__77_mg","children":[["$","h2",null,{"children":"Run in the cloud. Reach the world."}],["$","div",null,{"className":"Footer_footerLinks__xuRtG","children":[["$","a",null,{"href":"https://github.com/andygolubev","target":"_blank","children":["$","$L5",null,{"src":"/images/icons/github.svg","alt":"GitHub","width":24,"height":24}]}],["$","a",null,{"href":"https://www.linkedin.com/in/andy-golubev/","target":"_blank","children":["$","$L5",null,{"src":"/images/icons/linkedin.svg","alt":"LinkedIn","width":24,"height":24}]}],["$","a",null,{"href":"mailto:andygolubevcontact@gmail.com","target":"_blank","children":["$","$L5",null,{"src":"/images/icons/email.svg","alt":"Send email","width":24,"height":24}]}]]}]]}]}]]}]}]]}],{"children":["articles",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L6",["$","$L7",null,{"children":"$L8"}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/598b09e17ec3b27b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L9",null,{"children":["$La","$Lb",["$","$Lc",null,{"promise":"$@d"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","wIoT5Hp5W1ANAXXmZ-ut3",{"children":[["$","$Le",null,{"children":"$Lf"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$10","$undefined"],"s":false,"S":true}
11:"$Sreact.suspense"
12:I[4911,[],"AsyncMetadata"]
8:["$","$11",null,{"fallback":null,"children":["$","$L12",null,{"promise":"$@13"}]}]
b:null
14:T8ea,...
    BackuperComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
        Type: MANAGED
        ComputeEnvironmentName: backuper-environment
        ComputeResources:
        MaxvCpus: 4
        SecurityGroupIds:
            - !Ref BackuperSecurityGroup
        Type: FARGATE
        Subnets:
            - !Ref BackuperSubnet
        Tags: {"Name" : "BackuperComputeEnvironment", "CreatedBy" : "CloudFormationStack", "App" : "Backuper"}
        State: ENABLED

    BackuperJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
        Type: container
        JobDefinitionName: BackuperJobDefinition
        PlatformCapabilities:
        - FARGATE
        ContainerProperties:
        Image: registry.hub.docker.com/andygolubev/backuper:latest
        Environment:
            - Name: AWS_BACKUP_DESTINATION_BUCKET
            Value: !Ref awsBackupDestinationBucketName
            - Name: DO_PG_USER
            Value: !Ref doPgUser
            - Name: DO_KEY
            Value: !Ref doKey
            - Name: DO_PG_DBNAME
            Value: !Ref doPgDbname
            - Name: DO_PG_HOST
            Value: !Ref doPgHost
            - Name: DO_SECRET
            Value: !Ref doSecret
            - Name: DO_REGION_ENDPOINT
            Value: !Ref doRegionEndpoint
            - Name: DO_PG_PORT
            Value: !Ref doPgPort
            - Name: DO_PG_PASSWORD
            Value: !Ref doPgPassword
        Command:
            - /bin/bash
            - -c
            - /backuper/s3_backup_script.sh && /bin/bash -c /backuper/postgre_backup_script.sh
        Privileged: false
        JobRoleArn: !GetAtt  BackuperAmazonECSTaskExecutionRole.Arn
        ExecutionRoleArn: !GetAtt BackuperAmazonECSTaskExecutionRole.Arn
        ReadonlyRootFilesystem: false
        NetworkConfiguration:
            AssignPublicIp: ENABLED
        ResourceRequirements:
            - Type: MEMORY
            Value: 1024
            - Type: VCPU
            Value: 0.5
        LogConfiguration:
            LogDriver: awslogs
            Options:
            "awslogs-group": !Ref BackuperLogGroup
            "awslogs-stream-prefix": "prefix"
        Tags: {"Name" : "BackuperJobDefinition", "CreatedBy" : "CloudFormationStack", "App" : "Backuper"}

...
15:Td57,FROM ubuntu:22.04
WORKDIR /tmp

# install tools
RUN apt update && apt -y upgrade && apt -y --no-install-suggests --no-install-recommends install wget unzip curl tree git jq gettext zip ca-certificates

# install aws cli v2
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install && \ 
    aws --version

# install latest postgre tools
RUN apt -y install lsb-release gnupg2 --no-install-suggests --no-install-recommends && \
    sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    apt update && \
    apt -y install postgresql-client

# make working folders
RUN mkdir /backuper; mkdir /backup; mkdir /backup_db
WORKDIR /backuper

# declare variables for s3_backup_script.sh
ENV DO_KEY=NOT_DEFINED
ENV DO_SECRET=NOT_DEFINED
ENV DO_REGION_ENDPOINT=NOT_DEFINED
ENV AWS_BACKUP_DESTINATION_BUCKET=NOT_DEFINED

# declare variables for postgre_backup_script.sh
ENV DO_PG_HOST=NOT_DEFINED
ENV DO_PG_PORT=NOT_DEFINED
ENV DO_PG_USER=NOT_DEFINED
ENV DO_PG_PASSWORD=NOT_DEFINED
ENV DO_PG_DBNAME=NOT_DEFINED

# create a buckets backup script inside the docker image
RUN echo "BUCKETS_ALL=\$(AWS_ACCESS_KEY_ID=\$DO_KEY AWS_SECRET_ACCESS_KEY=\$DO_SECRET aws s3 ls --endpoint=\$DO_REGION_ENDPOINT  | awk '{print \$3}')" >> /backuper/s3_backup_script.sh
RUN echo '\
echo "This buckets will be processed: $BUCKETS_ALL" \n\
for BUCKET in $BUCKETS_ALL \n\
do \n\
    echo "Processing bucket -> $BUCKET" \n\
    mkdir -p /backup/$BUCKET/ \n\
    AWS_ACCESS_KEY_ID=$DO_KEY AWS_SECRET_ACCESS_KEY=$DO_SECRET aws s3 cp --quiet --recursive --endpoint=$DO_REGION_ENDPOINT s3://$BUCKET /backup/$BUCKET/ \n\
    ZIP_FILE_DATE_TIME=$(date +%Y-%m-%d--%H-%M) \n\
    zip --recurse-paths --quiet /backup/$ZIP_FILE_DATE_TIME-UTC-$BUCKET-bucket_backup.zip /backup/$BUCKET/ \n\
    aws s3 cp --storage-class GLACIER_IR /backup/$ZIP_FILE_DATE_TIME-UTC-$BUCKET-bucket_backup.zip  s3://$AWS_BACKUP_DESTINATION_BUCKET \n\
    echo "Successfully Processed -> $BUCKET" \n\
done \n\
echo "Bucket backup is COMPLITED" \
' >> /backuper/s3_backup_script.sh

# create a postgre backup script inside the docker image
RUN echo '\
echo "Making dump for PostgreSQL Database --> $DO_PG_DBNAME" \n\
mkdir -p /backup_db/$DO_PG_DBNAME/ \n\
PGPASSWORD=$DO_PG_PASSWORD pg_dump -U $DO_PG_USER -h $DO_PG_HOST -p $DO_PG_PORT -Fc $DO_PG_DBNAME > /backup_db/$DO_PG_DBNAME/$DO_PG_DBNAME.dump \n\
PGPASSWORD=$DO_PG_PASSWORD pg_dump -U $DO_PG_USER -h $DO_PG_HOST -p $DO_PG_PORT $DO_PG_DBNAME > /backup_db/$DO_PG_DBNAME/$DO_PG_DBNAME.sql \n\
ZIP_FILE_DATE_TIME=$(date +%Y-%m-%d--%H-%M) \n\
zip --recurse-paths --quiet /backup_db/$ZIP_FILE_DATE_TIME-UTC-$DO_PG_DBNAME-postgre_backup.zip /backup_db/$DO_PG_DBNAME/ \n\
aws s3 cp --storage-class GLACIER_IR /backup_db/$ZIP_FILE_DATE_TIME-UTC-$DO_PG_DBNAME-postgre_backup.zip  s3://$AWS_BACKUP_DESTINATION_BUCKET \n\
echo "Successfully Processed -> $DO_PG_DBNAME" \n\
echo "Postgre backup is COMPLITED" \
' >> /backuper/postgre_backup_script.sh

# make the script runnable
RUN chmod +x /backuper/s3_backup_script.sh
RUN chmod +x /backuper/postgre_backup_script.sh

ENTRYPOINT ["/bin/bash", "-c",  "/backuper/s3_backup_script.sh && /bin/bash -c /backuper/postgre_backup_script.sh"]
6:["$","div",null,{"className":"page_articleContainer__6YqF2","children":[["$","h1",null,{"style":{"fontSize":"2rem"},"children":"Backup tool using AWS Batch, ECS and Fargate for backuping objects from other clouds"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Date: 13 February 2024"}]}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds/logo.jpg","alt":"logo"}]}],"\n",["$","h2",null,{"children":"Introduction"}],"\n",["$","p",null,{"children":"Sometimes we have to do dull tasks like setting up a backup system. We want to do it in the easiest and cheapest way possible. That's why I think AWS gives us lots of services to do it smoothly."}],"\n",["$","p",null,{"children":"Because my computing stuff is on Digital Ocean, I couldn't use AWS Backup. So I looked at services that can provide infrequent workload and don't cost anything when they're not busy. For this plan, I picked AWS Batch with ECS on Fargate. And I use Event Bridge scheduler to start the jobs."}],"\n",["$","h2",null,{"children":"Solution"}],"\n",["$","p",null,{"children":"This is a general picture of my solution."}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds/pic01.jpg","alt":"solution diagram"}]}],"\n",["$","p",null,{"children":"I'm setting up everything using AWS CloudFormation."}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"$14"}]}],"\n",["$","p",null,{"children":"I use my Docker Image with built-in bash scripts."}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"$15"}]}],"\n",["$","p",null,{"children":"Once the CloudFormation stack is deployed successfully, we can see all the resources that have been created."}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds/pic02.jpg","alt":"resources"}]}],"\n",["$","p",null,{"children":"And as you can see, our AWS Batch service is fully set up and waiting for a trigger event."}],"\n",["$","p",null,{"children":"The scheduler is set with these configurations, and the cron will initiate an event at 8 AM UTC."}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds/pic03.jpg","alt":"scheduler"}]}],"\n",["$","p",null,{"children":"We have an Event Bridge rule that sifts through Batch Job-related events, keeping sensitive data out, and then sends them to the SNS Topic."}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds/pic04.jpg","alt":"event bridge rule"}]}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds/pic05.jpg","alt":"event bridge rule details"}]}],"\n",["$","p",null,{"children":"After running our job (either manually or by the scheduler), we can see it on our dashboard and receive emails with the job's status."}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds/pic06.jpg","alt":"job dashboard"}]}],"\n",["$","p",null,{"children":"The result notification looks like this."}],"\n",["$","figure",null,{"style":{"margin":"2rem 0"},"children":["$","img",null,{"src":"/articles/backup-tool-using-aws-batch-ecs-and-fargate-for-backuping-objects-from-other-clouds/pic07.jpg","alt":"notification email"}]}],"\n",["$","h2",null,{"children":"Conclusion"}],"\n",["$","p",null,{"children":"Here's an example of how you can handle occasional workloads efficiently with AWS Batch + ECS + Fargate, all while keeping costs down. Give it a shot!"}],"\n",["$","p",null,{"children":"I hope you enjoy this article."}],"\n",["$","p",null,{"children":["You can find all of my code in my GitHub repository: ",["$","a",null,{"href":"https://github.com/andygolubev/aws-backup-with-batch-and-fargate","children":"https://github.com/andygolubev/aws-backup-with-batch-and-fargate"}]]}],"\n",["$","p",null,{"children":["Feel free to connect with me on LinkedIn: ",["$","a",null,{"href":"https://www.linkedin.com/in/andy-golubev/","children":"https://www.linkedin.com/in/andy-golubev/"}]]}]]}]
f:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
a:null
13:{"metadata":[["$","title","0",{"children":"Andy Golubev | Cloud Architect & DevOps Engineer"}],["$","meta","1",{"name":"description","content":"Personal website of AWS & GCP certified Cloud Architect & DevOps Engineer Andy Golubev. Certifications, GitHub work, and articles on Kubernetes and Terraform."}],["$","link","2",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}],["$","link","3",{"rel":"icon","href":"/icon.png?a0799f5d3aa48e9f","type":"image/png","sizes":"512x512"}],["$","link","4",{"rel":"apple-touch-icon","href":"/apple-icon.png?21c489252a03a1cc","type":"image/png","sizes":"180x180"}]],"error":null,"digest":"$undefined"}
d:{"metadata":"$13:metadata","error":null,"digest":"$undefined"}
